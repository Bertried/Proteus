     1: #include "lcd.h"
     2: #include <pic.h>
     3: 
     4: void delay_ms(unsigned int tick){
     5:         while(tick--)__delay_ms(1);
     6: }
     7: 
     8: void lcd_pin(unsigned char c){
     9:     D4 = c & 1 ? 1 : 0;
    10:     D5 = c & 2 ? 1 : 0;
    11:     D6 = c & 4 ? 1 : 0;
    12:     D7 = c & 8 ? 1 : 0;
    13: }
    14: void lcd_cmd(unsigned char c){
    15:     RS = 0;
    16:     lcd_pin(c);
    17:     EN = 1;
    18:     delay_ms(4);
    19:     EN = 0;
    20: }
    21: 
    22: void lcd_clear(){
    23:     lcd_cmd(0);
    24:         lcd_cmd(1);
    25: }
    26: 
    27: void lcd_set_cursor(unsigned char a,unsigned char b){
    28:     unsigned char row, upper, lower;
    29:     if (a == 1)row = 0x80 + b;
    30:     else if (a == 2)row = 0xC0 + b;
    31:     else return;
    32:     upper = row >> 4;
    33:     lower = row & 0x0F;
    34:     lcd_cmd(upper);
    35:     lcd_cmd(lower);
    36: }
    37: 
    38: void lcd_init() {
    39:     lcd_pin(0x00);
    40:     __delay_ms(20);
    41:     lcd_cmd(0x03);
    42:     __delay_ms(5);
    43:     lcd_cmd(0x03);
    44:     __delay_ms(11);
    45:     lcd_cmd(0x03);
    46:     /////////////////////////////////////////////////////
    47:     lcd_cmd(0x02);
    48:     lcd_cmd(0x02);
    49:     lcd_cmd(0x08);
    50:     lcd_cmd(0x00);
    51:     lcd_cmd(0x0C);
    52:     lcd_cmd(0x00);
    53:     lcd_cmd(0x06);
    54: }
    55: 
    56: void lcd_write_character(unsigned char c){
    57:     unsigned char lower,upper;
    58:     lower = c & 0x0F;
    59:     upper = c >> 4;
    60:     RS = 1;
    61:     lcd_pin(upper);
    62:     EN = 1;
    63:     delay_ms(5);
    64:     EN = 0;
    65:     lcd_pin(lower);
    66:     EN = 1;
    67:     delay_ms(5);
    68:         EN = 0;
    69: }
    70: 
    71: void lcd_write_string(const char* s){
    72:     int i=0;
    73:     while(s[i])lcd_write_character(s[i++]);
    74: }
    75: 
    76: void lcd_shift_right()
    77: {
    78:         lcd_cmd(0x01);
    79:         lcd_cmd(0x0C);
    80: }
    81: 
    82: void lcd_shift_left()
    83: {
    84:         lcd_cmd(0x01);
    85:         lcd_cmd(0x08);
    86: }
    87: 
